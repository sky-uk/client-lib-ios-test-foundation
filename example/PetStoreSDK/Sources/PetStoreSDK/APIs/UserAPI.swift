//
// UserAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import ReactiveAPI
import RxSwift

open class UserAPI: ReactiveAPI { 
    /**
     Create user
     - parameter body: (body) Created user object 
     */
    public func createUser(body: User) -> Single<Void> {
        request(.post,
                url: absoluteURL("/user"),
                body: body)
    }


    /**
     Delete user
     - parameter username: (path) The name that needs to be deleted 
     */
    public func deleteUser(username: String) -> Single<Void> {
        request(.delete,
                url: absoluteURL("/user/\(username)"))
    }


    /**
     Get user by user name
     - parameter username: (path) The name that needs to be fetched. Use user1 for testing.  
     */
    public func getUserByName(username: String) -> Single<User> {
        request(.get,
                url: absoluteURL("/user/\(username)"))
    }


    /**
     Logs user into the system
     - parameter username: (query) The user name for login 
     - parameter password: (query) The password for login in clear text 
     */
    public func loginUser(username: String, password: String) -> Single<ApiResponse> {
        request(.get,
                url: absoluteURL("/user/login"),
                queryParams: ["username": username, "password": password])
    }


    /**
     Logs out current logged in user session
     */
    public func logoutUser() -> Single<Void> {
        request(.get,
                url: absoluteURL("/user/logout"))
    }


    /**
     Updated user
     - parameter body: (body) Updated user object 
     - parameter username: (path) name that need to be updated 
     */
    public func updateUser(body: User, username: String) -> Single<Void> {
        request(.put,
                url: absoluteURL("/user/\(username)"),
                body: body)
    }

}
