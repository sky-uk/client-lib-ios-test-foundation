//
// PetAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import ReactiveAPI
import RxSwift

open class PetAPI: ReactiveAPI { 
    /**
     Add a new pet to the store
     - parameter body: (body) Pet object that needs to be added to the store 
     */
    public func addPet(body: Pet) -> Single<Void> {
        request(.post,
                url: absoluteURL("/pet"),
                body: body)
    }


    /**
     Deletes a pet
     - parameter petId: (path) Pet id to delete 
     - parameter apiKey: (header)  (optional)
     */
    public func deletePet(petId: Int, apiKey: String? = nil) -> Single<Void> {
        request(.delete,
                url: absoluteURL("/pet/\(petId)"),
                headers: ["api_key": apiKey])
    }


    /**
     * enum for parameter status
     */
    public enum Status_findPetsByStatus: String, CustomStringConvertible { 
        case available = "available"
        case pending = "pending"
        case sold = "sold"

        public var description: String {
            return "\(rawValue)"
        }
    }
    /**
     Finds Pets by status
     - parameter status: (query) Status values that need to be considered for filter 
     */
    public func findPetsByStatus(status: [String]) -> Single<[Pet]> {
        request(.get,
                url: absoluteURL("/pet/findByStatus"),
                queryParams: ["status": status.compactMap { $0 }.map(String.init(describing:)).joined(separator: ",")])
    }


    /**
     Find pet by ID
     - parameter petId: (path) ID of pet to return 
     */
    public func getPetById(petId: Int) -> Single<Pet> {
        request(.get,
                url: absoluteURL("/pet/\(petId)"))
    }


    /**
     Update an existing pet
     - parameter body: (body) Pet object that needs to be added to the store 
     */
    public func updatePet(body: Pet) -> Single<Void> {
        request(.put,
                url: absoluteURL("/pet"),
                body: body)
    }

}
